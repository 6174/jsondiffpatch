<!DOCTYPE html>
<html>
    <head>
        <title>JsonDiffPatch Demo</title>
        <script src="http://code.jquery.com/jquery-1.6.2.js" type="text/javascript">
        </script>
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <link rel="stylesheet" href="demo.css" type="text/css" media="screen" />
        <!-- START: required libs -->
        <script type='text/javascript' src='../src/jsondiffpatch.js'>
        </script>
        <script type='text/javascript' src='../src/diff_match_patch_uncompressed.js'>
        </script>
        <!-- END: required libs -->
    </head>
    <body>
        <h1>JsonDiffPatch Demo</h1>
        <div class="jsontext">
            <div>
                <label for="json1">
                    JSON Original
                </label>
                <textarea id="json1" class="json-input">
                    {"format":"example","content":[{"align":"center","depth":0,"list":false,"content":[{"style":{"underline":1,"bold":2,"size":20,"italic":2,"color":"FFFFFF","fontFamily":"Arial"},"content":"And please, feel free to send us your feedback and comments to "},{"style":{"underline":1,"bold":2,"size":20,"italic":2,"color":"4DC3FF","fontFamily":"Arial"},"content":"hello world"},{"style":{"underline":1,"bold":2,"size":20,"italic":2,"color":"FFFFFF","fontFamily":"Arial"},"content":", or just by clicking on the "},{"style":{"underline":1,"bold":2,"size":20,"italic":2,"color":"4DC3FF","fontFamily":"Arial"},"content":"feedback"}],"ordered":false}],"version":3}
                </textarea>
            </div>
            <div>
                <label for="json2">
                    JSON New
                </label>
                <textarea id="json2" class="json-input">
                    {"format":"example","version":3.1,"content":[{"list":false,"depth":0,"ordered":false,"content":[{"content":"And please, feel free to send us your feedback and comments to ","style":{"size":20,"color":"FFFFFF","name":"Arial","bold":2,"italic":2,"underline":2}},{"content":"foo","style":{"size":20,"color":"4DC2FF","name":"Arial","bold":2,"italic":2,"underline":2}},{"content":", or just by clicking on the ","style":{"size":20,"color":"FFFFFF","name":"Arial","bold":2,"italic":2,"underline":2}},{"content":"feedback","style":{"size":20,"color":"4DC2FF","name":"Arial","bold":2,"italic":2,"underline":2}},{"content":" button up above.","style":{"size":20,"color":"FFFFFF","name":"Arial","bold":2,"italic":2,"underline":2}}],"align":"center"}]}
                </textarea>
            </div>
        </div>
        <div class="buttons">
            <input id="compare" type="button" value="Compare"><input id="swap" type="button" value="Swap"><input id="clear" type="button" value="Clear">
            <div>
                <input id="live" type="checkbox">
                <label for="live">
                    live
                </label>
            </div>
        </div>
        <div class="results">
            <h2>Visual Diff</h2>
            <div>
                <input id="showunchanged" type="checkbox">
                <label for="showunchanged">
                    Show unchanged values
                </label>
            </div>
            <p class="visualdiff" id="visualdiff">
            </p>
            <h2>JSON Diff</h2>
            <p>
                (<span id="jsondifflength"></span>
                KB)
            </p>
            <textarea id="jsondiff">
            </textarea>
        </div>
        <script type="text/javascript">
            $(function(){
            
                $('#swap').click(function(){
                    var t = $('#json1').val();
                    $('#json1').val($('#json2').val());
                    $('#json2').val(t);
                });
                
                $('#clear').click(function(){
                    $('#json1').val('');
                    $('#json2').val('');
                });
                
                $('#showunchanged').change(function(){
                    $('.unchanged')[this.checked ? 'slideDown' : 'slideUp']();
                });
                
                var objectToHtml = function(desc, o){
                    var container = document.createElement('div');
                    if (desc) {
                        if (o instanceof Array) {
                        
                        }
                        var descspan = document.createElement('span');
                        descspan.innerText = desc + (o instanceof Array ? ' (array)' : '');
                        descspan.setAttribute('class', 'property-name');
                        container.appendChild(descspan);
                    }
                    
                    if (typeof o == 'object') {
                        // a node (object or array)
                        var ul = document.createElement('ul');
                        
                        for (var prop in o) {
                            if (o.hasOwnProperty(prop)) {
                                var li = document.createElement('li');
                                li.appendChild(objectToHtml(prop, o[prop]));
                                ul.appendChild(li);
                            }
                        }
                        if (ul.childNodes.length > 0) {
                            container.appendChild(ul);
                        }
                    }
                    else {
                        var elem = document.createElement('p');
                        // unchanged
                        elem.innerText = JSON.stringify(o);
                        container.appendChild(elem);
                    }
                    return container;
                }
                
                var diffToHtml = function(desc, o, n, d){
                    var container = document.createElement('div');
                    var descspan = document.createElement('span');
                    descspan.innerText = desc + (n instanceof Array ? ' (array)' : '');
                    descspan.setAttribute('class', 'property-name');
                    container.appendChild(descspan);
                    if (d instanceof Array) {
                        // a added/modified/removed value
                        var elem = document.createElement('p');
                        if (d.length === 1) {
                            // added
                            container.setAttribute('class', 'added');
                            elem.appendChild(objectToHtml(null, d[0]));
                        }
                        else 
                            if (d.length == 2) {
                                // modified
                                container.setAttribute('class', 'modified');
                                var d1 = document.createElement('div');
                                d1.setAttribute('class', 'modified-original');
                                d1.appendChild(objectToHtml(null, d[0]));
                                var d2 = document.createElement('div');
                                d2.setAttribute('class', 'modified-new');
                                d2.appendChild(objectToHtml(null, d[1]));
                                elem.appendChild(d1);
                                elem.appendChild(d2);
                            }
                            else 
                                if (d[2] === 0) {
                                    // deleted
                                    container.setAttribute('class', 'deleted');
                                    elem.appendChild(objectToHtml(null, d[0]));
                                }
                                else 
                                    if (d[2] === 2) {
                                        // text diff
                                        container.setAttribute('class', 'textdiff');
                                        elem.innerText = d[0];
                                    }
                        
                        container.appendChild(elem);
                    }
                    else {
                        // a node (object or array)
                        var ul = document.createElement('ul');
                        
                        // only members in diff (skip unchanged members)
                        container.setAttribute('class', d._t === 'a' ? 'array' : 'object');
                        for (var prop in d) {
                            if (d.hasOwnProperty(prop) && prop !== '_t') {
                                var li = document.createElement('li');
                                li.appendChild(diffToHtml(prop, o[prop], n[prop], d[prop]));
                                ul.appendChild(li);
                            }
                        }
                        
                        // unchanged props
                        if (typeof o == 'object') {
                            for (var prop in o) {
                                if (o.hasOwnProperty(prop) && !d.hasOwnProperty(prop) && prop !== '_t') {
                                    var li = document.createElement('li');
                                    li.setAttribute('class', 'unchanged');
                                    li.appendChild(objectToHtml(prop, o[prop]));
                                    ul.appendChild(li);
                                }
                            }
                        }
                        container.appendChild(ul);
                    }
                    return container;
                }
                
                $('#compare').click(function(){
                
                    var json = [];
                    var errors = false;
                    $('#json1,#json2').removeClass('json-error');
                    try {
                        json[0] = JSON.parse($('#json1').val());
                    } 
                    catch (err) {
                        $('#json1').addClass('json-error');
                        errors = true;
                    }
                    try {
                        json[1] = JSON.parse($('#json2').val());
                    } 
                    catch (err) {
                        $('#json2').addClass('json-error');
                        errors = true;
                    }
                    
                    if (errors) {
                        $('.results').hide();
                        return;
                    }
                    
                    var d = jsondiffpatch.diff(json[0], json[1]);
                    
                    $('#jsondiff').val(JSON.stringify(d, null, 2));
                    $('#jsondifflength').text(Math.round(JSON.stringify(d).length / 102.4) / 10.0);
                    
                    $('#visualdiff').empty().append(diffToHtml('root', json[0], json[1], d));
                    
                    $('.unchanged')[$('#showunchanged').get(0).checked ? 'show' : 'hide']();
                    
                    $('.results').show();
                });
                
                $('.results').hide();
            });
        </script>
    </body>
</html>
